/* eslint-disable */
(()=>{"use strict";var n={424:(n,r,e)=>{e.d(r,{Z:()=>c});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.main-container {\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  box-shadow: 0 0 15px;\r\n  padding-top: 12px;\r\n  margin-top: 25vh;\r\n  background-color: #fff;\r\n}\r\n\r\n.main-container div {\r\n  border-bottom: solid #d3d3d3 2px;\r\n}\r\n\r\n.heading {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.heading h2 {\r\n  opacity: 0.75;\r\n  font-size: 20px;\r\n  margin-left: 12px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.heading i {\r\n  margin-right: 12px;\r\n  opacity: 0.7;\r\n}\r\n\r\n.line {\r\n  color: #d3d3d3;\r\n  opacity: 0.75;\r\n}\r\n\r\n#input {\r\n  border: none;\r\n  margin-left: 12px;\r\n  font-style: italic;\r\n  padding: 12px;\r\n  width: 80%;\r\n}\r\n\r\n#input:focus {\r\n  outline: none;\r\n}\r\n\r\n.text-input {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.text-input i {\r\n  margin-right: 12px;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.task-ui {\r\n  display: flex;\r\n  padding-left: 12px;\r\n  align-items: center;\r\n}\r\n\r\n.icon {\r\n  margin-left: auto;\r\n  margin-right: 12px;\r\n  cursor: pointer;\r\n  padding: 6px;\r\n}\r\n\r\n.return {\r\n  padding: 6px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reset {\r\n  padding: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.highlight {\r\n  background-color: #fbfecd;\r\n}\r\n\r\n.para {\r\n  margin-left: 12px;\r\n  padding: 12px;\r\n}\r\n\r\n.para:focus {\r\n  outline: none;\r\n}\r\n\r\n.footer {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\nfooter button {\r\n  border: none;\r\n  padding: 24px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  font-size: 16px;\r\n}\r\n\r\n.line-through {\r\n  text-decoration: line-through;\r\n}\r\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,UAAU;EACV,cAAc;EACd,oBAAoB;EACpB,iBAAiB;EACjB,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;EACf,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,6BAA6B;AAC/B",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.main-container {\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  box-shadow: 0 0 15px;\r\n  padding-top: 12px;\r\n  margin-top: 25vh;\r\n  background-color: #fff;\r\n}\r\n\r\n.main-container div {\r\n  border-bottom: solid #d3d3d3 2px;\r\n}\r\n\r\n.heading {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.heading h2 {\r\n  opacity: 0.75;\r\n  font-size: 20px;\r\n  margin-left: 12px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.heading i {\r\n  margin-right: 12px;\r\n  opacity: 0.7;\r\n}\r\n\r\n.line {\r\n  color: #d3d3d3;\r\n  opacity: 0.75;\r\n}\r\n\r\n#input {\r\n  border: none;\r\n  margin-left: 12px;\r\n  font-style: italic;\r\n  padding: 12px;\r\n  width: 80%;\r\n}\r\n\r\n#input:focus {\r\n  outline: none;\r\n}\r\n\r\n.text-input {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.text-input i {\r\n  margin-right: 12px;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.task-ui {\r\n  display: flex;\r\n  padding-left: 12px;\r\n  align-items: center;\r\n}\r\n\r\n.icon {\r\n  margin-left: auto;\r\n  margin-right: 12px;\r\n  cursor: pointer;\r\n  padding: 6px;\r\n}\r\n\r\n.return {\r\n  padding: 6px;\r\n  cursor: pointer;\r\n}\r\n\r\n.reset {\r\n  padding: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.highlight {\r\n  background-color: #fbfecd;\r\n}\r\n\r\n.para {\r\n  margin-left: 12px;\r\n  padding: 12px;\r\n}\r\n\r\n.para:focus {\r\n  outline: none;\r\n}\r\n\r\n.footer {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\nfooter button {\r\n  border: none;\r\n  padding: 24px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  font-size: 16px;\r\n}\r\n\r\n.line-through {\r\n  text-decoration: line-through;\r\n}\r\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=t.base?s[0]+t.base:s[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var f=o(u,t);t.byIndex=c,r.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=e(i[a]);r[c].references--}for(var s=t(n,o),A=0;A<i.length;A++){var d=e(i[A]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}i=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),i=e(569),a=e.n(i),c=e(565),s=e.n(c),A=e(216),d=e.n(A),l=e(589),p=e.n(l),u=e(424),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),r()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(n,r,e){this.description=n,this.completed=r,this.index=e}}let m=JSON.parse(localStorage.getItem("tasks"))||[];const E=()=>{m.forEach((n=>{(({description:n})=>{const r=document.querySelector(".tasks-section"),e=document.createElement("div");e.setAttribute("draggable","true"),e.classList.add("task-ui");const t=document.createElement("input");t.setAttribute("type","checkbox"),t.classList.add("check");const o=document.createElement("p");o.setAttribute("contenteditable","true"),o.setAttribute("class","para"),o.textContent=n;const i=document.createElement("i");i.setAttribute("class","fa-solid fa-ellipsis-vertical"),i.classList.add("icon","ellipse");const a=document.createElement("i");a.setAttribute("class","fa-solid fa-trash"),a.classList.add("hidden","icon","trash"),e.append(t,o,i,a),r.appendChild(e)})(n),document.querySelectorAll(".check").forEach(((n,r)=>{n.addEventListener("change",(e=>{const t=n.nextElementSibling,o=t.parentElement,i=m.filter((n=>n.index===r+1));e.target.checked?(t.classList.add("line-through"),o.classList.add("checked"),m[i[0].index-1].completed=!0):(t.classList.remove("line-through"),o.classList.remove("checked"),m[i[0].index-1].completed=!1),localStorage.setItem("tasks",JSON.stringify(m))}));const e=document.querySelector(".btn"),t=document.querySelector(".tasks-section");e.addEventListener("click",(()=>{const n=document.querySelectorAll(".checked");m=m.filter((n=>!0!==n.completed)),n.forEach((n=>t.removeChild(n)));for(let n=0;n<m.length;n+=1)m[n].index=n+1;localStorage.setItem("tasks",JSON.stringify(m))}))}))}))};function h(){document.querySelectorAll(".para").forEach(((n,r)=>{n.addEventListener("keydown",(e=>{if("Enter"===e.key){e.preventDefault();const t=n.textContent,o=m.filter((n=>n.index===r+1));m[o[0].index-1].description=t,localStorage.setItem("tasks",JSON.stringify(m)),n.parentElement.classList.remove("highlight"),n.nextElementSibling.classList.remove("hidden"),n.nextElementSibling.nextElementSibling.classList.add("hidden")}}))}))}function C(){const n=document.querySelectorAll(".task-ui"),r=document.querySelectorAll(".trash"),e=document.querySelectorAll(".ellipse"),t=document.querySelector(".tasks-section");for(let t=0;t<n.length;t+=1)n[t].addEventListener("click",(()=>{n[t].classList.toggle("highlight"),r[t].classList.toggle("hidden"),e[t].classList.toggle("hidden")}));r.forEach(((n,r)=>{n.addEventListener("click",(n=>{const e=n.target.parentElement;t.removeChild(e),m=m.filter((n=>n.index!==r+1));for(let n=0;n<m.length;n+=1)m[n].index=n+1;localStorage.setItem("tasks",JSON.stringify(m)),t.innerHTML="",E(),C(),h()}))}))}function x(){const n=document.getElementById("input"),r=n.value;if(document.querySelector(".tasks-section").innerHTML="",""!==r){const e=new g(r,!1,m.length+1);m.push(e),E(),C(),h(),n.value="",localStorage.setItem("tasks",JSON.stringify(m))}}document.getElementById("input").addEventListener("keydown",(n=>function(n){"Enter"===n.key&&(document.querySelector(".tasks-section").innerHTML="",x())}(n))),document.querySelector(".return").addEventListener("click",(()=>x())),E(),C(),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,